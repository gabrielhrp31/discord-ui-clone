{"version":3,"sources":["styles/GlobalStyles.ts","components/ServerButton/styles.ts","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/Layouts/styles.ts","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelList/styles.ts","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelData/styles.ts","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/index.tsx","components/Layouts/index.tsx","store.ts","App.tsx","index.tsx"],"names":["createGlobalStyle","Button","styled","button","props","isHome","hasNotifications","mentions","ServerButton","selected","Container","div","Separator","ServerList","Grid","Title","h1","ExpandIcon","ExpandMore","CloseIcon","Close","inject","observer","store","onClick","setOpen","OpenServersIcon","Menu","OpenFriendsIcon","UserFriends","CloseFriendsIcon","HashtagIcon","Hashtag","Description","span","ChannelInfo","open","Category","AddCategoryIcon","Add","HashtagIcons","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","className","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Role","User","UserRow","nickname","isBot","UserList","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","Array","from","keys","map","n","type","placeholder","Store","action","bound","makeObservable","this","value","observable","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3bcdf08.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin:0;\n        padding:0;\n        box-sizing:border-box;\n    }\n\n    html,body,#root{\n        height:100%;\n        overflow: hidden;\n    }\n\n    *, button, input{\n        border:0;\n        outline:0;\n        font-family:'Roboto', sans-serif;\n    }\n\n    :root {\n        --primary: #36393f;\n        --secondary: #2f3136;\n        --tertiary: rgb(32,34,37);\n        --quaternary: #292b2f;\n        --quinary: #393d42;\n        --senary: #828386;\n     \n        --white: #fff;\n        --gray: #8a8c90;\n        --chat-input: rgb(64,68,75);\n        --symbol: #74777a;\n     \n        --notification: #f84a4b;\n        --discord: #6e86d6;\n        --mention-detail: #f9a839;\n        --mention-message: #413f3f;\n     \n        --link: #5d80d6;\n     \n        --rocketseat: #6633cc;\n    }\n`;","import styled from \"styled-components\";\n\nimport { Props } from '.';\n\nexport const Button = styled.button<Props>`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n\n    width:48px;\n    height:48px;\n    min-height:48px;\n\n    border-radius:50%;\n\n    margin-bottom:8px;\n\n    background-color:${(props) => props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\n\n    position:relative;\n    cursor:pointer;\n  \n    > img {\n      width:24px;\n      height:24px;\n    }\n  \n    &::before{\n      width: 9px;\n      height: 9px;\n      \n      position: absolute;\n      left:-17px;\n      top: calc(50% - 4.5px);\n      background-color: var(--white);\n      border-radius: 50%;\n      \n      content: '';\n      display: ${(props) => props.hasNotifications ? 'inline' : 'none'};\n    }\n  \n    &::after{\n      background-color: var(--notification);\n      width: auto;\n      height: 16px;\n      \n      padding: 0 4px;\n      \n      position: absolute;\n      bottom: -4px;\n      right: -4px;\n      border-radius: 12px;\n      border:4px solid var(--quartenary);\n      text-align: right;\n      font-size: 13px;\n      font-weight: bold;\n      color: var(--white);\n\n      display: ${(props) => props.mentions? 'inline' : 'none'};\n      content:  '${(props) => props.mentions && props.mentions}';\n    }\n  \n    &.active, &:hover{\n      border-radius:16px;\n      background-color: ${(props) => props.isHome ? 'var(--rocketseat)' : 'var(--discord)'};\n    }\n`;","import React from 'react';\nimport { Button } from './styles';\n\nexport interface Props {\n    selected?: boolean,\n    isHome?: boolean,\n    hasNotifications?: boolean,\n    mentions?: number,\n}\n\nconst ServerButton: React.FC<Props> = ({\n    selected,\n    isHome,\n    hasNotifications,\n    mentions,\n}) => {\n    return <Button isHome={isHome} hasNotifications={hasNotifications} mentions={mentions} selected={selected}/>;\n}\n\nexport default ServerButton;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    grid-area:SL;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n\n    background-color:var(--tertiary);\n    padding:11px 0;\n    max-height:100vh;\n    overflow-y:scroll;\n\n    ::-webkit-scrollbar{\n        display:none;\n    }\n`;\n\nexport const Separator = styled.div`\n    width:32px;\n    border-bottom:2px solid var(--quaternary);\n    margin-bottom:8px;\n`;\n","import React from 'react';\nimport ServerButton from '../ServerButton';\nimport { Container, Separator } from './styles';\n\nconst ServerList: React.FC = () => {\n    return <Container>\n        <ServerButton isHome />\n        <Separator />\n        <ServerButton mentions={10} />\n        <ServerButton />\n        <ServerButton />\n        <ServerButton hasNotifications />\n        <ServerButton mentions={3} />\n        <ServerButton />\n        <ServerButton />\n        <ServerButton hasNotifications />\n        <ServerButton />\n        <ServerButton />\n        <ServerButton hasNotifications />\n        <ServerButton />\n        <ServerButton />\n        <ServerButton mentions={7}/>\n        <ServerButton mentions={1} />\n        <ServerButton mentions={4}/>\n        <ServerButton />\n        <ServerButton />\n        <ServerButton />\n        <ServerButton />\n    </Container>;\n}\n\nexport default ServerList;","import styled from \"styled-components\";\n\n//SL - Server List\n//SN - Server Name\n//CI - Channel Info\n//CL - Channel List\n//CD - Channel Data\n//UL - User List\n//UI - User Info\n\nexport const Grid = styled.div`\n\n    height: 100vh;\n    display: grid;\n    grid-template-columns:100%;\n    grid-template-rows:46px auto 52px; \n    grid-template-areas:\n        'CI CI CI CI'\n        'CD CD CD CD'    \n        'CD CD CD CD';\n    overflow: hidden;\n\n    &.open-channel-list{\n    grid-template-columns:71px calc(85vw - 71px) 500px;\n    grid-template-rows:46px calc(100vh - 46px - 52px) 52px;\n    grid-template-areas:\n        'SL SN CI'\n        'SL CL CD'    \n        'SL UI CD';\n    \n    >div.overlay{\n      position: absolute;\n      width: 500px;\n      margin-left: 85vw;\n      background-color: rgba(0,0,0,0.2);\n      min-height: 100vh;\n      z-index: 10;\n    }\n  }\n\n\n  &.open-user-list {\n    grid-template-columns:15vw 85vw auto auto;\n    grid-template-rows:46px calc(100vh - 46px - 52px) 52px;\n    grid-template-areas:\n        'CI CI CI CI'\n        'UL UL UL UL'    \n        'UL UL UL UL';\n  }\n  \n  @media (min-width: 769px){\n    grid-template-columns:71px 240px calc(100vw - 71px - 240px)!important;\n    grid-template-rows:46px calc(100vh - 46px - 52px) 52px!important;\n    grid-template-areas:\n            'SL SN CI CI'\n            'SL CL CD CD'    \n            'SL UI CD CD' !important;\n\n    &.open-user-list {\n      grid-template-columns:15vw 85vw auto auto;\n      grid-template-rows:46px calc(100vh - 46px - 52px) 52px;\n      grid-template-areas:\n          'CI CI CI CI'\n          'UL UL UL UL'    \n          'UL UL UL UL'!important;\n    }\n  }\n  \n  @media (min-width: 1025px) {\n    grid-template-columns:71px 240px auto 240px!important;\n    grid-template-areas:\n        'SL SN CI CI'\n        'SL CL CD UL'    \n        'SL UI CD UL'!important;\n  }\n`;","import styled from \"styled-components\";\nimport { ExpandMore, Close } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: SN;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  padding: 0 11px 0 16px;\n  background-color: var(--secondary);\n  \n  box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\n  z-index: 2;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: bold;\n  \n  color: var(--white);\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n    width: 28px;\n  height: 28px;\n  \n  color: var(--white);\n  cursor: pointer;\n`;\nexport const CloseIcon = styled(Close)`\n  display:inline-block;\n  width: 24px;\n  height: 24px;\n  \n  color: var(--white);\n  cursor: pointer;\n  \n  @media (min-width: 769px){\n    display:none;\n  }\n`;","import { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport Store from '../../store';\nimport { Container, Title, ExpandIcon, CloseIcon } from './styles';\n\n\ninterface ServerNameProps {\n    store?: Store | undefined\n}\n\nconst ServerName: React.FC<ServerNameProps> = (props) => {\n\n    const { store } = props;\n\n    return <Container>\n        <Title>Bunker</Title>\n        <div>\n            <ExpandIcon />\n            <CloseIcon onClick={() => store?.setOpen('')} />\n        </div>\n    </Container>;\n}\n\nexport default inject('store')(observer(ServerName));","import styled from \"styled-components\";\nimport { Hashtag } from 'styled-icons/heroicons-outline'\nimport { Menu } from '@styled-icons/boxicons-regular/Menu'\nimport { Close } from 'styled-icons/material';\nimport { UserFriends } from '@styled-icons/fa-solid/UserFriends'\n\nexport const Container = styled.div`\n    grid-area: CI;\n    display: flex;\n    align-items: center;\n    \n    padding: 0 17px;\n    background-color:var(--primary);\n\n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\n    z-index: 2;\n`;\n\nexport const Title = styled.h1`\n  margin-left: 9px;\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\n\nexport const OpenServersIcon = styled(Menu)`\n    width: 24px;\n    height: 24px;\n    margin-left:-10px;\n    margin-right:5px;\n    color: var(--white);\n    cursor:pointer;\n  \n    @media (min-width: 769px){\n        display:none;\n    }\n`;\n\n\nexport const OpenFriendsIcon = styled(UserFriends)`\n    width: 24px;\n    height: 24px;\n    margin-left:auto;\n    margin-right:5px;\n    color: var(--white);\n    cursor:pointer;\n  \n    @media (min-width: 1025px){\n        display:none;\n    }\n`;\n\nexport const CloseFriendsIcon = styled(Close)`\n    width: 24px;\n    height: 24px;\n    margin-left:auto;\n    margin-right:5px;\n    color: var(--white);\n    cursor:pointer;\n    @media (min-width: 1025px){\n        display:none;\n    }\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n    width: 24px;\n    height: 24px;\n  \n    color: var(--symbol);\n`;\n\nexport const Separator = styled.div`\n    height: 24px;\n    width:1px;\n    \n    background-color:var(--white);\n    opacity: 0.2;\n    margin:0 13px;\n`;\n\nexport const Description = styled.span`\n    font-size: 15px;\n    color:var(--gray);\n`;","import React from 'react';\nimport { Container, Title, HashtagIcon, Separator, Description, OpenServersIcon, OpenFriendsIcon, CloseFriendsIcon } from './styles';\nimport Store from \"../../store\";\nimport { observer, inject } from 'mobx-react'\n\n\ninterface ChannelInfoProps {\n    store?: Store | undefined\n}\n\nconst ChannelInfo: React.FC<ChannelInfoProps> = inject('store')(observer((props) => {\n\n    const { store } = props;\n\n    return <Container>\n        {store?.open !== 'user-list' &&\n            <OpenServersIcon onClick={() => { store?.setOpen('channel-list') }} />\n        }\n        <HashtagIcon />\n        <Title>Canal de Texto</Title>\n        <Separator />\n        <Description> Lorem ipsum sit dolor amet</Description>\n        {\n            store?.open === 'user-list' ?\n                <CloseFriendsIcon onClick={() => { store?.setOpen('') }} />\n                :\n                <OpenFriendsIcon onClick={() => { store?.setOpen('user-list') }} />\n        }\n    </Container>;\n}));\n\nexport default ChannelInfo;","import styled from \"styled-components\";\nimport {Add} from \"styled-icons/material\";\n\n\nexport const Container = styled.div`\n    grid-area: CL;\n    display: none;\n    flex-direction: column;\n  \n    padding: 24px 9.5px 0 16px;\n    background-color: var(--secondary);\n\n    @media (min-width: 769px) {\n        display: flex;\n    }\n  \n    &.open{\n      display: flex;\n    }\n`;\nexport const Category = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  \n    margin-bottom: 6px;\n  \n    > span {\n      text-transform: uppercase;\n      font-size: 12px;\n      font-weight: 500;\n      color:var(--gray);\n    }\n`;\n\nexport const AddCategoryIcon = styled(Add)`\n    width: 21px;\n    height: 21px;\n  \n    cursor: pointer;\n    color:var(--symbol)\n`;","import styled from \"styled-components\";\nimport {PersonAdd, Settings} from 'styled-icons/material';\nimport {Hashtag} from \"styled-icons/heroicons-outline\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  padding: 5px 3px;\n  border-radius: 5px;\n  \n  background-color: transparent;\n  \n  transition:background-color .2s;\n  \n  \n  > div {\n    display: flex;\n    align-items: center;\n  }\n  \n  &.active, &:hover{\n    background-color: var(--quinary);\n    \n    >div span {\n      color: var(--white);\n      cursor: pointer;\n    }\n  }\n\n  >div svg:not(:only-of-type) {\n    opacity: 0;\n    transition: opacity .3s;\n  }\n\n  &:hover{\n      >div svg:not(:only-of-type) {\n        opacity: 1;\n      }\n  }\n`;\n\nexport const Title = styled.span`\n  font-size: 15px;\n  \n  color: var(--senary);\n  \n  margin-left: 5px;\n`\n\nexport const HashtagIcons = styled(Hashtag)`\n    width:20px;\n    height: 20px;\n  \n    color: var(--symbol);\n`;\n\nexport const InviteIcon = styled(PersonAdd)`\n    width: 16px;\n    height: 16px;\n    \n    color: var(--symbol);\n    cursor: pointer;\n  \n    transition:color .2s;\n    \n    &:hover{\n      color:var(--white)\n    }\n`;\nexport const SettingsIcon = styled(Settings)`\n    width: 16px;\n    height: 16px;\n    \n    color: var(--symbol);\n    cursor: pointer;\n    \n    transition:color .2s;\n  \n    margin-left: 4px;\n    \n    &:hover{\n    color:var(--white)\n    }\n`;","import React from 'react';\nimport { Container,HashtagIcons,Title,InviteIcon,SettingsIcon } from './styles';\n\nexport interface Props {\n    channelName:string;\n    selected?:boolean;\n}\n\nconst ChannelButton: React.FC<Props> = ({\n    channelName,\n    selected\n                                        }) => {\n    return <Container className={selected?'active':''}>\n        <div>\n            <HashtagIcons />\n            <Title>{channelName}</Title>\n        </div>\n        <div>\n            <InviteIcon />\n            <SettingsIcon />\n        </div>\n    </Container>;\n}\n\nexport default ChannelButton;","import React from 'react';\nimport { Container, Category, AddCategoryIcon } from './styles';\nimport ChannelButton from \"../ChannelButton\";\n\nexport interface Props {\n    open: boolean\n}\n\nconst ChannelList: React.FC<Props> = ({\n    open\n}) => {\n    return <Container className={open ? 'open' : ''}>\n        <Category >\n            <span>Canais de Texto</span>\n            <AddCategoryIcon />\n        </Category>\n        <ChannelButton channelName=\"chat-livre\" />\n        <ChannelButton channelName=\"trabalho\" />\n        <ChannelButton channelName=\"smitezinho\" />\n        <ChannelButton channelName=\"csgo\" />\n        <ChannelButton channelName=\"valorant\" />\n    </Container>;\n}\n\nexport default ChannelList;","import styled from \"styled-components\";\nimport {Mic,Headset,Settings} from 'styled-icons/material';\n\nexport const Container = styled.div`\n    grid-area: UI;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n    padding: 10px;\n    background-color: var(--quaternary);\n    \n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\n`;\n\nexport const Profile = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\n\nexport const Avatar = styled.div`\n    width: 32px;\n    height: 32px;\n  \n    border-radius: 50%;\n    background-color: var(--gray);\n`;\n\nexport const UserData = styled.div`\n    margin-left: 8px;\n  \n    display: flex;\n    flex-direction: column;\n\n    >strong{\n        font-size: 13px;\n        color:var(--white);\n    }\n    \n    >span{\n        font-size: 13px;\n        color:var(--gray);\n    }\n`;\n\nexport const Icons = styled.div`\n    display: flex;\n    align-items: center;\n  \n    > svg:not(:first-child){\n        margin-left: 7px;\n    }\n`;\n\nexport const MicIcon = styled(Mic)`\n    width: 20px;\n    height: 20px;\n  \n    color: var(--white);\n    opacity: .7;\n    transition: opacity .2s;\n\n    cursor: pointer;\n  \n    &:hover{\n      opacity: 1;\n    }\n`;\nexport const HeadphoneIcon = styled(Headset)`\n    width: 20px;\n    height: 20px;\n    \n    color: var(--white);\n    opacity: .7;\n    transition: opacity .2s;\n\n    cursor: pointer;\n        \n    &:hover{\n        opacity: 1;\n    }\n`;\nexport const SettingsIcon = styled(Settings)`\n    width: 20px;\n    height: 20px;\n    \n    color: var(--white);\n    opacity: .7;\n    transition: opacity .2s;\n\n    cursor: pointer;\n    \n    &:hover{\n      opacity: 1;\n    }\n`;","import React from 'react';\nimport { Container,Profile, Avatar,UserData,Icons,MicIcon,HeadphoneIcon,SettingsIcon } from './styles';\n\nconst UserInfo: React.FC = () => {\n    return <Container>\n        <Profile>\n            <Avatar />\n            <UserData >\n                <strong >Winchester</strong>\n                <span>#3556</span>\n            </UserData>\n        </Profile>\n        <Icons>\n            <MicIcon />\n            <HeadphoneIcon />\n            <SettingsIcon />\n        </Icons>\n    </Container>;\n}\n\nexport default UserInfo;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: UL;\n  display: flex;\n  flex-direction: column;\n  padding: 3px 6px 0px 16px;\n  background-color: var(--secondary);\n  z-index: 3;\n  max-width: 100vw;\n  max-height: 100vh;\n  overflow-y: scroll;\n  position: relative;\n  \n  @media (min-width: 1025px) {\n    transform: unset;\n    position: relative;\n\n    max-height: calc(100vh - 46px);\n\n    overflow-y: scroll;\n  }\n\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const Role = styled.div`\n    margin: 20px;\n  \n    text-transform: uppercase;\n    font-size: 12px;\n    color: var(--gray);\n    font-weight: 500;\n`;\n\nexport const User = styled.div`\n    margin-top: 5px;\n    padding: 5px;\n  \n    display: flex;\n    align-items: center;\n  \n    cursor: pointer;\n    \n    border-radius: 4px;\n    background: transparent;\n    transition: background-color .2s;\n  \n    &:hover{\n      background-color: rgba(255,255,255,0.1);\n    }\n  \n    >strong {\n      margin-left: 13px;\n      font-weight: 500;\n      \n      color: var(--white);\n      opacity: .7;\n      \n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow-y: hidden;\n    }\n  \n    >span {\n      margin-left: 9px;\n      \n      background-color: var(--discord);\n      color: var(--white);\n      border-radius: 4px;\n      padding: 4px 5px;\n      \n      text-transform: uppercase;\n      font-weight: bold;\n      font-size: 11px;\n    }\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n  \n  flex-shrink: 0;\n  \n  border-radius: 50%;\n  background-color: var(--primary);\n  \n  &.bot{\n      background-color: var(--mention-detail);\n  }\n`;","import React from 'react';\nimport { Container, Role, Avatar, User } from './styles';\n\nexport interface UserProps {\n    nickname: string,\n    isBot?: boolean,\n}\n\nconst UserRow: React.FC<UserProps> = ({\n    nickname,\n    isBot,\n}) => {\n\n    return (\n        <User >\n            <Avatar className={isBot ? 'bot' : ''} />\n            <strong>{nickname}</strong>\n            {isBot && <span>BOT</span>}\n        </User>\n    )\n}\n\n\nconst UserList: React.FC = () => {\n\n\n\n    return <Container >\n        <Role>\n            Disponivel - 1\n        </Role>\n        <UserRow nickname=\"Winhcester\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <Role>\n            Offline - 1\n        </Role>\n        <UserRow nickname=\"Dj Rogerinho\" isBot />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" isBot />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Bot\" isBot />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Bot\" isBot />\n        <UserRow nickname=\"Fulano\" />\n        <UserRow nickname=\"Fulano\" />\n    </Container>;\n}\n\nexport default UserList;","import styled from \"styled-components\";\nimport {AlternateEmail} from 'styled-icons/material';\n\nexport const Container = styled.div`\n    grid-area: CD;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    max-height: calc(100vh - 46px);\n\n  \n    padding-right:3px;\n  \n    background-color: var(--primary);\n  \n    @media (min-width: 769px) {\n      margin-left: unset;\n    }\n`;\n\nexport const Messages = styled.div`\n    padding: 20px 0;\n  \n    display: flex;\n    flex-direction: column;\n    max-height: calc(100vh - 46px);\n    overflow-y: scroll;\n  \n    ::-webkit-scrollbar {\n        width: 8px;\n    }\n    \n    ::-webkit-scrollbar-thumb {\n        background-color: var(--tertiary);\n    }\n    \n    ::-webkit-scrollbar-track {\n        border-radius: 8px;\n        background-color: var(--secondary);\n    }\n  \n    @media (min-width: 769px) {\n        max-height: calc(100vh - 46px - 68px);\n    }\n\n`;\nexport const InputWrapper = styled.div`\n    width: 100%;\n    padding: 0 16px;\n    position: relative;\n  \n`;\nexport const Input = styled.input`\n    width: 100%;\n    height: 44px;\n    padding: 0 10px 0 57px;\n    border-radius: 7px;\n  \n    color: var(--white);\n    background-color: var(--chat-input);\n\n    position: relative;\n  \n    &::placeholder{\n        color:var(--gray);\n    }\n  \n    ~svg{\n        transition: 180ms ease-in-out;\n    }\n`;\nexport const InputIcon = styled(AlternateEmail)`\n    width: 24px;\n    height: 24px;\n\n    position: absolute;\n    z-index: 3;\n    top: 50%;\n    transform: translateY(-50%);\n    left:30px;\n    \n    color: var(--gray);\n`;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  \n  padding: 4px 16px;\n  background-color: transparent;\n  \n  &.mention{\n      background-color: var(--mention-message);\n      border-left: 2px solid var(--mention-detail);\n      padding-left: 14px;\n  }\n  & + div{\n      margin-top: 13px;\n  }\n`;\n\nexport const Avatar = styled.div`\n    width: 40px;\n    height: 40px;\n  \n    border-radius: 30px;\n  \n    background-color: var(--secondary);\n    flex-shrink: 0;\n    margin-right: 4px;\n  \n    &.bot{\n        background-color: var(--mention-detail);\n    }\n`\n\nexport const Message = styled.div`\n    min-height: 40px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  \n    margin-left: 17px;\n`\n\nexport const Header = styled.div`\n    display: flex;\n    align-items: center;\n  \n    > strong {\n        color: var(--white);\n        font-size: 16px;\n    }\n\n\n    >span {\n        margin-left: 9px;\n        \n        background-color: var(--discord);\n        color: var(--white);\n        border-radius: 4px;\n        padding: 4px 5px;\n        \n        text-transform: uppercase;\n        font-weight: bold;\n        font-size: 11px;\n    }\n  \n    >time{\n        margin-left: 6px;\n        color:var(--gray);\n        font-size: 13px;\n    }\n`\n\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 16px;\n  color: var(--white);\n`\n\nexport const Mention = styled.span`\n    color: var(--link);\n    cursor: pointer;\n    &:hover{\n        text-decoration: underline;\n    }\n`","import React from 'react';\nimport { Container,Avatar,Message,Header,Content } from './styles';\nexport {Mention} from './styles'\n\nexport interface Props{\n    author: string,\n    date:string,\n    content:string | React.ReactElement | React.ReactNode,\n    hasMention?:boolean,\n    isBot?:boolean\n}\n\nconst ChannelMessage: React.FC<Props> = ({\n    author,\n    date,\n    content,\n    hasMention,\n    isBot\n}) => {\n    return <Container className={hasMention?'mention':''}>\n        <Avatar className={isBot?'bot':''}/>\n        <Message>\n            <Header >\n                <strong>{author}</strong>\n                {isBot && <span>BOT</span>}\n                <time>{date}</time>\n            </Header>\n            <Content>\n                {content}\n            </Content>\n        </Message>\n    </Container>;\n}\n\nexport default ChannelMessage;","import React, {useEffect, useRef} from 'react';\nimport { Container,Messages,InputWrapper,Input,InputIcon } from './styles';\nimport ChannelMessage from \"../ChannelMessage\";\nimport {Mention} from \"../ChannelMessage\";\n\n\nconst ChannelData: React.FC = () => {\n\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n\n    useEffect(()=>{\n        const div = messagesRef.current;\n\n        if(div){\n            div.scrollTop=div.scrollHeight;\n        }\n    },[messagesRef])\n\n    return <Container>\n        <Messages>\n            {   Array.from(Array(15).keys()).map((n)=>(\n                    <ChannelMessage key={n} author={\"Winchester\"} date={\"31/01/2000\"} content={\"Hoje é meu aniversário!\"} />\n                ))\n            }\n            <ChannelMessage\n                author={\"Fulano Bot\"}\n                date={\"31/01/2000\"}\n                content={\n                    <>\n                        <Mention>@Winchester</Mention> Hoje é seu aniversário? Parabéns!\n                    </>\n                }\n                isBot\n                hasMention\n            />\n        </Messages>\n        <InputWrapper >\n            <InputIcon />\n            <Input type=\"text\" placeholder=\"Digite sua mensagem para #chat-livre\"/>\n        </InputWrapper>\n    </Container>;\n}\n\nexport default ChannelData;","import React from 'react';\nimport ServerList from '../ServerList';\nimport { Grid } from './styles';\nimport ServerName from \"../ServerName\";\nimport ChannelInfo from \"../ChannelInfo\";\nimport ChannelList from \"../ChannelList\";\nimport UserInfo from \"../UserInfo\";\nimport UserList from \"../UserList\";\nimport ChannelData from \"../ChannelData\";\nimport Store from \"../../store\";\nimport { observer, inject } from 'mobx-react'\n\n\ninterface LayoutProps {\n    store?: Store | undefined\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n\n    const { store } = props;\n\n\n    return <>\n        {store &&\n            <Grid className={store.open ? 'open-' + store.open : ''} >\n                <div className=\"overlay\" />\n                <ServerList />\n                <ServerName />\n                <ChannelInfo />\n                <ChannelList open={store.open === 'channel-list'} />\n                <UserInfo />\n                <ChannelData />\n                <UserList />\n            </Grid>\n        }\n    </>;\n};\n\nexport default inject('store')(observer(Layout));","import { action, makeObservable, observable } from \"mobx\";\n\n\n\nexport default class Store {\n    @observable public open: string = \"\";\n\n    constructor() {\n        makeObservable(this);\n    }\n\n    @action.bound\n    setOpen(value: string) {\n        this.open = value;\n    }\n}\n","import React from 'react';\n\nimport GlobalStyles from './styles/GlobalStyles';\nimport Layout from './components/Layouts';\nimport Store from './store';\nimport { Provider } from 'mobx-react';\n\nfunction App() {\n  const store: Store = new Store();\n\n  return (\n    <>\n      <Provider store={store}>\n        <Layout />\n      </Provider>\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}